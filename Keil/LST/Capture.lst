C51 COMPILER V9.60.0.0   CAPTURE                                                           08/25/2022 14:22:39 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE CAPTURE
OBJECT MODULE PLACED IN .\Output\Capture.obj
COMPILER INVOKED BY: C:\Keil_v5_8051\C51\BIN\C51.EXE ..\Capture.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\..\..\Library\De
                    -vice\Include;..\..\..\..\Library\StdDriver\inc;..\..\Timer2_AutoReload_Capture) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND P
                    -RINT(.\LST\Capture.lst) TABS(2) OBJECT(.\Output\Capture.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2020 nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          /*********************************************************************************************************
             -**/
   8          /* Website: http://www.nuvoton.com                                                                        
             - */
   9          /*  E-Mail : MicroC-8bit@nuvoton.com                                                                      
             - */
  10          /*  Date   : Jan/21/2020                                                                                  
             - */
  11          /*********************************************************************************************************
             -**/
  12          
  13          /*********************************************************************************************************
             -***/
  14          /*  File Function: MS51 Timer 2 capture function demo                                                     
             -  */
  15          //********************************************************************************************************
             -***/
  16          #include "IR.h"
  17          #include "millis.h"
  18          #include "board.h"
  19          
  20          #define PERIOD_OPEN 700
  21          #define PERIOD_CLOSE 300
  22          
  23          static void speaker_handle(uint8_t state);
  24          static void open_lock_handle();
  25          static void close_lock_handle();
  26          
  27          uint32_t u32Cmd, current_time, open_time;
  28          uint8_t count_key = 0;
  29          uint8_t count_speaker = 0;
  30          uint8_t count_find = 0;
  31          uint8_t key_flag = 0;
  32          uint8_t speaker_flag = 0;
  33          uint8_t led_flag = 0;
  34          uint8_t find_flag = 0;
  35          uint8_t speaker_state = 0;
  36          uint8_t key_state = 0;
  37          
  38          extern uint32_t button_state[4];
  39          extern uint8_t index;
  40          /*********************************************   *********************************************************
C51 COMPILER V9.60.0.0   CAPTURE                                                           08/25/2022 14:22:39 PAGE 2   

             -******/
  41          /*    Main function                                                                                       
             -  */
  42          /*********************************************************************************************************
             -***/
  43          void main(void)
  44          {
  45   1        millis_init();
  46   1        IR_Init();
  47   1        board_io_init();
  48   1        board_pwm_init();
  49   1      
  50   1        set_WDCON_WDCLR; // Clear WDT timer
  51   1      
  52   1        while (1)
  53   1        {
  54   2          set_WDCON_WDCLR;
  55   2      
  56   2          current_time = millis();
  57   2          if (find_flag)
  58   2          {
  59   3            LED_OUT_PIN = !LED_OUT_PIN;
  60   3            if (count_find < 6)
  61   3            {
  62   4              PWMRUN = !PWMRUN;
  63   4              XINHAN_OUT_PIN = !XINHAN_OUT_PIN;
  64   4            }
  65   3            else
  66   3            {
  67   4              PWMRUN = 0;
  68   4              XINHAN_OUT_PIN = 0;
  69   4            }
  70   3            count_find++;
  71   3            if (count_find >= 40)
  72   3            {
  73   4              PWMRUN = 0;
  74   4              XINHAN_OUT_PIN = 0;
  75   4              LED_OUT_PIN = 0;
  76   4              count_find = 0;
  77   4              find_flag = 0;
  78   4            }
  79   3          }
  80   2          while (millis() - current_time < 500)
  81   2          {
  82   3            set_WDCON_WDCLR;
  83   3            if (IR_Check(&u32Cmd, P17))
  84   3            {
  85   4      
  86   4              if (u32Cmd == button_state[0])
  87   4              {
  88   5                find_flag = 1;
  89   5                if (count_find > 6)
  90   5                  count_find = 0;
  91   5              }
  92   4              else if (u32Cmd == button_state[1])
  93   4              {
  94   5                count_key++;
  95   5                if (key_state == 0)
  96   5                {
  97   6                  if (count_key >= 70)
  98   6                  {
  99   7                    open_lock_handle();
C51 COMPILER V9.60.0.0   CAPTURE                                                           08/25/2022 14:22:39 PAGE 3   

 100   7                    LED_OUT_PIN = 1;
 101   7                    open_time = millis();
 102   7                    led_flag = 1;
 103   7                  }
 104   6                }
 105   5                else
 106   5                {
 107   6                  close_lock_handle();
 108   6                }
 109   5              }
 110   4              else if (u32Cmd == button_state[2])
 111   4              {
 112   5                count_speaker++;
 113   5                if (count_speaker >= 40)
 114   5                {
 115   6                  count_speaker = 0;
 116   6                  speaker_state = !speaker_state;
 117   6                  speaker_handle(speaker_state);
 118   6                }
 119   5              }
 120   4            }
 121   3          }
 122   2          if (key_state == 1 && (millis() - open_time) > 10000 && led_flag == 1)
 123   2          {
 124   3            led_flag = 0;
 125   3            LED_OUT_PIN = 0;
 126   3            PWMRUN = 1;
 127   3            delay_ms(PERIOD_OPEN);
 128   3            PWMRUN = 0;
 129   3            delay_ms(PERIOD_CLOSE);
 130   3            set_WDCON_WDCLR;
 131   3            PWMRUN = 1;
 132   3            delay_ms(PERIOD_OPEN);
 133   3            PWMRUN = 0;
 134   3          }
 135   2        }
 136   1      }
 137          
 138          static void open_lock_handle()
 139          {
 140   1        set_WDCON_WDCLR;
 141   1        LED_OUT_PIN = 1;
 142   1        PWMRUN = 1;
 143   1        XINHAN_OUT_PIN = 1;
 144   1        delay_ms(PERIOD_OPEN);
 145   1        XINHAN_OUT_PIN = 0;
 146   1        set_WDCON_WDCLR;
 147   1        delay_ms(PERIOD_OPEN);
 148   1        set_WDCON_WDCLR;
 149   1        delay_ms(PERIOD_OPEN);
 150   1        PWMRUN = 0;
 151   1        LOCK_OUT_PIN = 1;
 152   1        count_key = 0;
 153   1        key_state = 1;
 154   1        LED_OUT_PIN = 0;
 155   1      }
 156          
 157          static void close_lock_handle()
 158          {
 159   1        int i;
 160   1        for (i = 0; i < 2; i++)
 161   1        {
C51 COMPILER V9.60.0.0   CAPTURE                                                           08/25/2022 14:22:39 PAGE 4   

 162   2          set_WDCON_WDCLR;
 163   2          PWMRUN = 1;
 164   2          XINHAN_OUT_PIN = 1;
 165   2          delay_ms(PERIOD_OPEN);
 166   2          XINHAN_OUT_PIN = 0;
 167   2          PWMRUN = 0;
 168   2          delay_ms(PERIOD_CLOSE);
 169   2        }
 170   1        count_find = 40;
 171   1        LED_OUT_PIN = 0;
 172   1        key_state = 0;
 173   1        LOCK_OUT_PIN = 0;
 174   1      }
 175          
 176          static void speaker_handle(uint8_t state)
 177          {
 178   1        if (state)
 179   1        {
 180   2          PWMRUN = 1;
 181   2          XINHAN_OUT_PIN = 1;
 182   2          LED_OUT_PIN = 1;
 183   2          delay_ms(PERIOD_OPEN);
 184   2          PWMRUN = 0;
 185   2          XINHAN_OUT_PIN = 0;
 186   2          LED_OUT_PIN = 0;
 187   2          delay_ms(PERIOD_CLOSE);
 188   2          set_WDCON_WDCLR;
 189   2          XINHAN_OUT_PIN = 1;
 190   2          LED_OUT_PIN = 1;
 191   2          delay_ms(PERIOD_OPEN);
 192   2          XINHAN_OUT_PIN = 0;
 193   2          LED_OUT_PIN = 0;
 194   2          delay_ms(PERIOD_CLOSE);
 195   2          set_WDCON_WDCLR;
 196   2          XINHAN_OUT_PIN = 1;
 197   2          LED_OUT_PIN = 1;
 198   2          delay_ms(PERIOD_OPEN);
 199   2          XINHAN_OUT_PIN = 0;
 200   2          LED_OUT_PIN = 0;
 201   2          set_WDCON_WDCLR;
 202   2        }
 203   1        else
 204   1        {
 205   2          PWMRUN = 1;
 206   2          delay_ms(PERIOD_OPEN);
 207   2          set_WDCON_WDCLR;
 208   2          delay_ms(PERIOD_OPEN);
 209   2          set_WDCON_WDCLR;
 210   2          delay_ms(PERIOD_OPEN);
 211   2          PWMRUN = 0;
 212   2          delay_ms(PERIOD_CLOSE);
 213   2          set_WDCON_WDCLR;
 214   2          PWMRUN = 1;
 215   2          XINHAN_OUT_PIN = 1;
 216   2          delay_ms(PERIOD_OPEN);
 217   2          PWMRUN = 0;
 218   2          XINHAN_OUT_PIN = 0;
 219   2          set_WDCON_WDCLR;
 220   2        }
 221   1      }


C51 COMPILER V9.60.0.0   CAPTURE                                                           08/25/2022 14:22:39 PAGE 5   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    941    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     21       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
