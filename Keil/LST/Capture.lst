C51 COMPILER V9.60.0.0   CAPTURE                                                           08/23/2022 02:05:35 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE CAPTURE
OBJECT MODULE PLACED IN .\Output\Capture.obj
COMPILER INVOKED BY: C:\Keil_v5_8051\C51\BIN\C51.EXE ..\Capture.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\..\..\Library\De
                    -vice\Include;..\..\..\..\Library\StdDriver\inc;..\..\Timer2_AutoReload_Capture) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND P
                    -RINT(.\LST\Capture.lst) TABS(2) OBJECT(.\Output\Capture.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2020 nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          /*********************************************************************************************************
             -**/
   8          /* Website: http://www.nuvoton.com                                                                        
             - */
   9          /*  E-Mail : MicroC-8bit@nuvoton.com                                                                      
             - */
  10          /*  Date   : Jan/21/2020                                                                                  
             - */
  11          /*********************************************************************************************************
             -**/
  12          
  13          /*********************************************************************************************************
             -***/
  14          /*  File Function: MS51 Timer 2 capture function demo                                                     
             -  */
  15          //********************************************************************************************************
             -***/
  16          #include "IR.h"
  17          #include "millis.h"
  18          #include "board.h"
  19          #include "button.h"
  20          
  21          static void find_lock_handle();
  22          static void open_lock_handle();
  23          static void close_lock_handle();
  24          
  25          uint32_t u32Cmd, current_time;
  26          uint8_t count_open = 0;
  27          uint8_t pair_flag = 0;
  28          extern uint32_t button_state[4];
  29          extern uint8_t index;
  30          /*********************************************   *********************************************************
             -******/
  31          /*    Main function                                                                                       
             -  */
  32          /*********************************************************************************************************
             -***/
  33          void main(void)
  34          {
  35   1        millis_init();
  36   1        IR_Init();
  37   1        board_io_init();
C51 COMPILER V9.60.0.0   CAPTURE                                                           08/23/2022 02:05:35 PAGE 2   

  38   1        board_pwm_init();
  39   1        TA=0xAA;TA=0x55;WDCON|=0x07;                //Setting WDT prescale 
  40   1        set_WDCON_WDCLR;                            //Clear WDT timer
  41   1        set_WDCON_WDTR;
  42   1        while (1)
  43   1        {
  44   2          LED_OUT_PIN = 0;
  45   2          current_time = millis();
  46   2          while (millis() - current_time < 20000)
  47   2          {
  48   3            set_WDCON_WDCLR;
  49   3            if (IR_Check(&u32Cmd, pair_flag))
  50   3            {
  51   4              if (u32Cmd == button_state[2])
  52   4              {
  53   5                LED_OUT_PIN = 1;
  54   5                current_time = millis();
  55   5                find_lock_handle();
  56   5              }
  57   4              else if (u32Cmd == button_state[0])
  58   4              {
  59   5                count_open++;
  60   5                if (count_open >= 90)
  61   5                  open_lock_handle();
  62   5              }
  63   4              else if (u32Cmd == button_state[1])
  64   4              {
  65   5                close_lock_handle();
  66   5              }
  67   4            }
  68   3            switch (button_handle())
  69   3            {
  70   4            case SHORT_PRESSED:
  71   4              index = 0;
  72   4              pair_flag = !pair_flag;
  73   4              PAIR_OUT_PIN = pair_flag;
  74   4              break;
  75   4            default:
  76   4              break;
  77   4            }
  78   3          }
  79   2        }
  80   1      }
  81          
  82          static void find_lock_handle()
  83          {
  84   1        int i;
  85   1        for (i = 0; i < 3; i++)
  86   1        {
  87   2          PWMRUN = 1;
  88   2          XINHAN_OUT_PIN = 1;
  89   2          delay_ms(1000);
  90   2          XINHAN_OUT_PIN = 0;
  91   2          PWMRUN = 0;
  92   2          delay_ms(500);
  93   2        }
  94   1      }
  95          
  96          static void open_lock_handle()
  97          {
  98   1        PWMRUN = 1;
  99   1        XINHAN_OUT_PIN = 1;
C51 COMPILER V9.60.0.0   CAPTURE                                                           08/23/2022 02:05:35 PAGE 3   

 100   1        delay_ms(1000);
 101   1        XINHAN_OUT_PIN = 0;
 102   1        delay_ms(2000);
 103   1        PWMRUN = 0;
 104   1        LOCK_OUT_PIN = 1;
 105   1        count_open = 0;
 106   1      }
 107          
 108          static void close_lock_handle()
 109          {
 110   1        int i;
 111   1        for (i = 0; i < 2; i++)
 112   1        {
 113   2          PWMRUN = 1;
 114   2          XINHAN_OUT_PIN = 1;
 115   2          delay_ms(1000);
 116   2          XINHAN_OUT_PIN = 0;
 117   2          PWMRUN = 0;
 118   2          delay_ms(500);
 119   2        }
 120   1        LOCK_OUT_PIN = 0;
 121   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    425    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
