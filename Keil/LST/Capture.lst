C51 COMPILER V9.60.0.0   CAPTURE                                                           08/25/2022 09:54:04 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE CAPTURE
OBJECT MODULE PLACED IN .\Output\Capture.obj
COMPILER INVOKED BY: C:\Keil_v5_8051\C51\BIN\C51.EXE ..\Capture.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\..\..\Library\De
                    -vice\Include;..\..\..\..\Library\StdDriver\inc;..\..\Timer2_AutoReload_Capture) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND P
                    -RINT(.\LST\Capture.lst) TABS(2) OBJECT(.\Output\Capture.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2020 nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          /*********************************************************************************************************
             -**/
   8          /* Website: http://www.nuvoton.com                                                                        
             - */
   9          /*  E-Mail : MicroC-8bit@nuvoton.com                                                                      
             - */
  10          /*  Date   : Jan/21/2020                                                                                  
             - */
  11          /*********************************************************************************************************
             -**/
  12          
  13          /*********************************************************************************************************
             -***/
  14          /*  File Function: MS51 Timer 2 capture function demo                                                     
             -  */
  15          //********************************************************************************************************
             -***/
  16          #include "IR.h"
  17          #include "millis.h"
  18          #include "board.h"
  19          
  20          #define PERIOD_OPEN 700
  21          #define PERIOD_CLOSE 300
  22          
  23          static void speaker_handle(uint8_t state);
  24          static void open_lock_handle();
  25          static void close_lock_handle();
  26          
  27          uint32_t u32Cmd, current_time, open_time;
  28          uint8_t count_key = 0;
  29          uint8_t count_speaker = 0;
  30          uint8_t count_find = 0;
  31          uint8_t key_flag = 0;
  32          uint8_t speaker_flag = 0;
  33          uint8_t led_flag = 0;
  34          uint8_t find_flag = 0;
  35          uint8_t speaker_state = 0;
  36          uint8_t key_state = 0;
  37          /*********************************************   *********************************************************
             -******/
  38          /*    Main function                                                                                       
             -  */
C51 COMPILER V9.60.0.0   CAPTURE                                                           08/25/2022 09:54:04 PAGE 2   

  39          /*********************************************************************************************************
             -***/
  40          void main(void)
  41          {
  42   1        millis_init();
  43   1        IR_Init();
  44   1        board_io_init();
  45   1        board_pwm_init();
  46   1      
  47   1        set_WDCON_WDCLR; // Clear WDT timer
  48   1      
  49   1        while (1)
  50   1        {
  51   2          set_WDCON_WDCLR;
  52   2      
  53   2          current_time = millis();
  54   2          if (find_flag)
  55   2          {
  56   3            LED_OUT_PIN = !LED_OUT_PIN;
  57   3            if (count_find < 6)
  58   3            {
  59   4              PWMRUN = !PWMRUN;
  60   4              XINHAN_OUT_PIN = !XINHAN_OUT_PIN;
  61   4            }
  62   3            else
  63   3            {
  64   4              PWMRUN = 0;
  65   4              XINHAN_OUT_PIN = 0;
  66   4            }
  67   3            count_find++;
  68   3            if (count_find >= 40)
  69   3            {
  70   4              PWMRUN = 0;
  71   4              XINHAN_OUT_PIN = 0;
  72   4              LED_OUT_PIN = 0;
  73   4              count_find = 0;
  74   4              find_flag = 0;
  75   4            }
  76   3          }
  77   2          while (millis() - current_time < 500)
  78   2          {
  79   3            set_WDCON_WDCLR;
  80   3            if (IR_Check(&u32Cmd, 1))
  81   3            {
  82   4              switch (u32Cmd)
  83   4              {
  84   5              case FIND_BUTTON:
  85   5                find_flag = 1;
  86   5                if(count_find > 6)
  87   5                  count_find = 0;
  88   5                break;
  89   5              case KEY_BUTTON:
  90   5                count_key++;
  91   5                if (key_state == 0)
  92   5                {
  93   6                  if (count_key >= 70)
  94   6                  {
  95   7                    open_lock_handle();
  96   7                    LED_OUT_PIN = 1;
  97   7                    open_time = millis();
  98   7                    led_flag = 1;
  99   7                  }
C51 COMPILER V9.60.0.0   CAPTURE                                                           08/25/2022 09:54:04 PAGE 3   

 100   6                }
 101   5                else
 102   5                {
 103   6                  close_lock_handle();
 104   6                }
 105   5                break;
 106   5              case SPEAKER_BUTTON:
 107   5                count_speaker++;
 108   5                if (count_speaker >= 40)
 109   5                {
 110   6                  count_speaker = 0;
 111   6                  speaker_state = !speaker_state;
 112   6                  speaker_handle(speaker_state);
 113   6                }
 114   5                break;
 115   5              }
 116   4            }
 117   3          }
 118   2          if(key_state == 1 && (millis() - open_time) > 10000 && led_flag == 1)
 119   2          {
 120   3            led_flag = 0;
 121   3            LED_OUT_PIN = 0;
 122   3            PWMRUN = 1;
 123   3            delay_ms(PERIOD_OPEN);
 124   3            PWMRUN = 0;
 125   3            delay_ms(PERIOD_CLOSE);
 126   3            set_WDCON_WDCLR;
 127   3            PWMRUN = 1;
 128   3            delay_ms(PERIOD_OPEN);
 129   3            PWMRUN = 0;
 130   3          }
 131   2        }
 132   1      }
 133          
 134          static void open_lock_handle()
 135          {
 136   1        set_WDCON_WDCLR;
 137   1        LED_OUT_PIN = 1;
 138   1        PWMRUN = 1;
 139   1        XINHAN_OUT_PIN = 1;
 140   1        delay_ms(PERIOD_OPEN);
 141   1        XINHAN_OUT_PIN = 0;
 142   1        set_WDCON_WDCLR;
 143   1        delay_ms(PERIOD_OPEN);
 144   1        set_WDCON_WDCLR;
 145   1        delay_ms(PERIOD_OPEN);
 146   1        PWMRUN = 0;
 147   1        LOCK_OUT_PIN = 1;
 148   1        count_key = 0;
 149   1        key_state = 1;
 150   1        LED_OUT_PIN = 0;
 151   1      }
 152          
 153          static void close_lock_handle()
 154          {
 155   1        int i;
 156   1        for (i = 0; i < 2; i++)
 157   1        {
 158   2          set_WDCON_WDCLR;
 159   2          PWMRUN = 1;
 160   2          XINHAN_OUT_PIN = 1;
 161   2          delay_ms(PERIOD_OPEN);
C51 COMPILER V9.60.0.0   CAPTURE                                                           08/25/2022 09:54:04 PAGE 4   

 162   2          XINHAN_OUT_PIN = 0;
 163   2          PWMRUN = 0;
 164   2          delay_ms(PERIOD_CLOSE);
 165   2        }
 166   1        count_find = 40;
 167   1        LED_OUT_PIN = 0;
 168   1        key_state = 0;
 169   1        LOCK_OUT_PIN = 0;
 170   1      }
 171          
 172          static void speaker_handle(uint8_t state)
 173          {
 174   1        if (state)
 175   1        {
 176   2          PWMRUN = 1;
 177   2          XINHAN_OUT_PIN = 1;
 178   2          LED_OUT_PIN = 1;
 179   2          delay_ms(PERIOD_OPEN);
 180   2          PWMRUN = 0;
 181   2          XINHAN_OUT_PIN = 0;
 182   2          LED_OUT_PIN = 0;
 183   2          delay_ms(PERIOD_CLOSE);
 184   2          set_WDCON_WDCLR;
 185   2          XINHAN_OUT_PIN = 1;
 186   2          LED_OUT_PIN = 1;
 187   2          delay_ms(PERIOD_OPEN);
 188   2          XINHAN_OUT_PIN = 0;
 189   2          LED_OUT_PIN = 0;
 190   2          delay_ms(PERIOD_CLOSE);
 191   2          set_WDCON_WDCLR;
 192   2          XINHAN_OUT_PIN = 1;
 193   2          LED_OUT_PIN = 1;
 194   2          delay_ms(PERIOD_OPEN);
 195   2          XINHAN_OUT_PIN = 0;
 196   2          LED_OUT_PIN = 0;
 197   2          set_WDCON_WDCLR;
 198   2        }
 199   1        else
 200   1        {
 201   2          PWMRUN = 1;
 202   2          delay_ms(PERIOD_OPEN);
 203   2          set_WDCON_WDCLR;
 204   2          delay_ms(PERIOD_OPEN);
 205   2          set_WDCON_WDCLR;
 206   2          delay_ms(PERIOD_OPEN);
 207   2          PWMRUN = 0;
 208   2          delay_ms(PERIOD_CLOSE);
 209   2          set_WDCON_WDCLR;
 210   2          PWMRUN = 1;
 211   2          XINHAN_OUT_PIN = 1;
 212   2          delay_ms(PERIOD_OPEN);
 213   2          PWMRUN = 0;
 214   2          XINHAN_OUT_PIN = 0;
 215   2          set_WDCON_WDCLR;
 216   2        }
 217   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    902    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
C51 COMPILER V9.60.0.0   CAPTURE                                                           08/25/2022 09:54:04 PAGE 5   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =     21       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
